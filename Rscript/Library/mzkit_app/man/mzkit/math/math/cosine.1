.\" man page create by R# package system.
.TH MATH 4 2000-Jan "cosine" "cosine"
.SH NAME
cosine \- Do evaluate the spectra cosine similarity score
.SH SYNOPSIS
\fIcosine(\fBquery\fR as any, 
\fBref\fR as any, 
\fBtolerance\fR as any = "da:0.3", 
\fBintocutoff\fR as double = 0.05, 
[\fB<Environment>\fR]);\fR
.SH DESCRIPTION
.PP
Do evaluate the spectra cosine similarity score
.PP
.SH OPTIONS
.PP
\fBquery\fB \fR\- the query input could be a collection of the sample spectrum data inputs.. 
.PP
.PP
\fBref\fB \fR\- should be a single reference spectrum object. 
.PP
.PP
\fBtolerance\fB \fR\- -. 
.PP
.PP
\fBintocutoff\fB \fR\- -. 
.PP
.PP
\fBenv\fB \fR\- -. 
.PP
.SH DETAILS
.PP
this function andalso produce the jaccard/entropy similarity of the spectrum inside the similarity result object
.PP
.SH EXAMPLES
.PP
# create the spectrum matrix object
 # fragment data tagged with the source name title
 let spec1 = libraryMatrix(
     matrix = data.frame(
         mz = c(169.071, 186.066, 186.0769),
         intensity = c(7.917962, 1.021589, 100.0)
     ),
     title = "Demo MS1 Spectra",
     centroid = TRUE
 );
 let spec2 = libraryMatrix(
     matrix = data.frame(
         mz = c(120.212, 169.071, 186.066),
         intensity = c(37.16, 66.83, 999.0)
     ),
     title = "Demo MS1 Spectra",
     centroid = TRUE
 );
 let compares = math::cosine(spec1, spec2);
 let scores = as.data.frame(compares, scores_df = TRUE);

 print(scores);
 #               dimension    scores 
 # ----------------------------------
 # <mode>         <string>  <double>
 # [1, ]  "forward cosine"  0.999925
 # [2, ]  "reverse cosine"  0.999925
 # [3, ]          "cosine"  0.999925
 # [4, ]         "jaccard"         1
 # [5, ]         "entropy"  0.999949
 # [6, ]          "mirror"         1
 # [7, ]            "mean"   0.99995
 # [8, ]   "fragment hits"         2

 svg(file = "figures/00_Mass_spectrometry/Math/03_compares.svg") {
     plot(compares);
 }
.PP
.SH SEE ALSO
math
.SH FILES
.PP
mzkit.dll
.PP
.SH AUTHOR
Written by \fBgg.xie@bionovogene.com\fR
